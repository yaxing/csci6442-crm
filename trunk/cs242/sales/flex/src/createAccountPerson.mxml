<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" height="844" 
			    xmlns:accountservice="services.accountservice.*">
	
	<fx:Declarations>
		<s:HTTPService id="createPerson" url="accountPerson.php"
					    fault="createPerson_faultHandler(event)"
					   useProxy="false" method="POST">
			<mx:request xmlns="">
				<Account_id>{parentAccount.selectedItem.account_id}</Account_id>
				<Account_Person_Title>{title.text}</Account_Person_Title>
				<First_Name> {firstName.text} </First_Name>
				<Last_Name>{lastName.text}</Last_Name>
			</mx:request>        
		</s:HTTPService>		
		<s:CallResponder id="getAllAccountResult"/>
		<accountservice:AccountService id="accountService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.adobe.fiber.core.model_internal;
			import com.adobe.serializers.utility.TypeUtility;
			
			import flash.net.*;
			
			import mx.controls.*;
			import mx.core.mx_internal;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import flash.net.*;
			import flash.events.*;
			import mx.collections.ArrayCollection;
			import mx.controls.*;
			import mx.events.MenuEvent;		
			
			public function menuBarItemClickHandler(event:MenuEvent):void {
				switch(event.label){
					case 'Create Account':
						var urlReq:URLRequest = new URLRequest("createAccount.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Communication':
						var urlReq:URLRequest = new URLRequest("createCommunication.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Account Person':
						var urlReq:URLRequest = new URLRequest("createAccountPerson.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Account Location':
						var urlReq:URLRequest = new URLRequest("createAccountLocation.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Contract':
						var urlReq:URLRequest = new URLRequest("createContract.html");
						navigateToURL(urlReq, "_self");
						break;
				}
				
			}
			//			var urlReq:URLRequest = new URLRequest("AccountPerson.html");
			
			private function send_data():void {
				createPerson.send();
				//Alert.show("test----> " + parentAccount.selectedItem.account_id);
				Alert.show("Account Person created!!!");
				
				var urlReq:URLRequest = new URLRequest("dashboard.html");
				navigateToURL(urlReq, "_self");
			}
			
			//cancel data
			private function cancel_data():void {
				//Alert.show("test----> " + parentAccount.selectedItem.account_id);
				Alert.show("Cancle Account Person Input?", "Cancel", 3, this, cancel_method);
			}
			
			//detailed steps for cancel button
			public function cancel_method(event:CloseEvent):void{
				var urlReq:URLRequest = new URLRequest("AccountPerson.html");				
				if(event.detail == Alert.YES)
					navigateToURL(urlReq, "_self");
			}				
			protected function parentAccount_creationCompleteHandler(event:FlexEvent):void
			{
				getAllAccountResult.token = accountService.getAllAccount();
			}
			

			protected function createPerson_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
			}

		]]>
	</fx:Script>
	
	
	<s:SkinnableContainer width="479" height="294" y="176" x="274">
		<s:Label x="63" y="15" text="Account" fontFamily="Verdana" fontWeight="bold"/>
		<s:DropDownList x="201" y="10" id="parentAccount"  width="194"  labelField="account_name" creationComplete="parentAccount_creationCompleteHandler(event)">
			<s:AsyncListView list="{TypeUtility.convertToCollection(getAllAccountResult.lastResult)}"/>
			
		</s:DropDownList>
		
		<s:Label x="63" y="56" text="Title" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="52" width="40%" fontFamily="Verdana" id="title" contentBackgroundColor="#FFFFFF"/>
		
		<s:Label x="63" y="86" text="First Name" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="82" width="40%" fontFamily="Verdana" id="firstName" contentBackgroundColor="#FFFFFF"/>
		
		<s:Label x="63" y="116" text="Last Name" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="112" width="40%" fontFamily="Verdana" id="lastName" contentBackgroundColor="#FFFFFF"/>
		
		<s:Button x="108" y="192" label="Save" id="saveButton"  click="send_data()"/>
		<s:Button x="227" y="192" label="Cancel" id="cancelButton" click="cancel_data()"/>
		<!--<s:Button x="338" y="192" label="Add Location..." id="addLocation"/>-->
	</s:SkinnableContainer>
	<mx:HRule x="0" y="121" width="100%"/>
	<!--<mx:VRule x="185" y="-1" height="100%"/>
	-->	
	<!-- Define the menu; dataProvider is the default MenuBar property.
	Because this uses an XML data provider, specify the labelField and
	showRoot properties. -->
	<mx:MenuBar id="bar" labelField="@label" itemClick="menuBarItemClickHandler(event)" x="325" y="74" height="39" width="305"  cornerRadius="20" fontFamily="Verdana" fontSize="13">
		<fx:XMLList>
			<menuitem label="Home"/>
			<menuitem label="Sales">
				<menuitem label="Create Account"  />
				<menuitem label="Create Account Person" />
				<menuitem label="Create Account Location" />
				<menuitem label="Create Contract" />
				<menuitem label="Create Communication" />
				<!--<menuitem label="Delete Account" enabled="false"/>-->
			</menuitem>
			<menuitem label="Ticket">
				<menuitem label="Create Ticket" />
				<menuitem label="Ticket Status"/>
			</menuitem>
			<menuitem label="Finance"/>
		</fx:XMLList>
	</mx:MenuBar>
	<s:Label x="291" y="132" text="Account Person Management" fontFamily="Verdana" fontWeight="bold" width="422" height="22" verticalAlign="middle" fontSize="21" textAlign="center"/>
	
</s:Application>
