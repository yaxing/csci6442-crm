<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" height="844"
			     xmlns:customertypeservice="services.customertypeservice.*">
	
	<fx:Declarations>
		<s:HTTPService id="create_account" url="createAccount.php"
					   useProxy="false" method="POST"
					    fault="create_account_faultHandler(event)">
			<mx:request xmlns="">				
				<Account_Name>{accountName.text}</Account_Name>
				<Website> {accountWebsite.text} </Website>
				<Account_Type> {accountType.selectedItem} </Account_Type>
				<Customer_Type> {customerType.selectedItem.customer_type} </Customer_Type>
				<First_Name> {firstName.text} </First_Name>
				<Last_Name>{lastName.text}</Last_Name>
				<Account_Person_Title>{title.text}</Account_Person_Title>
				<Zip_Code>{zipCode.text}</Zip_Code>
				<Address1>{address1.text}</Address1>
				<Address2>{address2.text}</Address2>
				<City>{city.text}</City>
				<State>{state.text}</State>	
				<Email>{accountEmail.text}</Email>
				<Phone>{accountPhone.text}</Phone>
			</mx:request>        
		</s:HTTPService>
		<s:CallResponder id="getAllCustomer_typeResult"/>
		<customertypeservice:CustomertypeService id="customertypeService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
		<s:ArrayList id="typeAccount">
			<fx:String>Lead</fx:String>
			<fx:String>Customer</fx:String>
		</s:ArrayList>
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.net.*;
			
			import mx.controls.*;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import flash.net.*;
			import flash.events.*;
			import mx.collections.ArrayCollection;
			import mx.events.MenuEvent;		
			
			public function menuBarItemClickHandler(event:MenuEvent):void {
				switch(event.label){
					case 'Create Account':
						var urlReq:URLRequest = new URLRequest("createAccount.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Communication':
						var urlReq:URLRequest = new URLRequest("createCommunication.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Account Person':
						var urlReq:URLRequest = new URLRequest("createAccountPerson.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Account Location':
						var urlReq:URLRequest = new URLRequest("createAccountLocation.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Contract':
						var urlReq:URLRequest = new URLRequest("createContract.html");
						navigateToURL(urlReq, "_self");
						break;
				}
				
			}
			private function to_create_account():void {
				var urlReq:URLRequest = new URLRequest("createAccount.html");
				navigateToURL(urlReq, "_self");
			}
			private function to_modify_account():void {
				var urlReq:URLRequest = new URLRequest("createCommunication.html");
				navigateToURL(urlReq, "_self");
			}
			private function submit_ok():void{
				var urlReq:URLRequest = new URLRequest("ok.html");
				navigateToURL(urlReq, "_self");
			}
			private function send_data():void {
				create_account.send();
				Alert.show("Account created!!!");
				var urlReq:URLRequest = new URLRequest("createAccount.html");
				navigateToURL(urlReq, "_self");
				//to_modify_account();
			}

			protected function create_account_faultHandler(event:FaultEvent):void
			{
				Alert.show(event.toString());// TODO Auto-generated method stub
			}		
			
			protected function customerType_creationCompleteHandler(event:FlexEvent):void
			{
				getAllCustomer_typeResult.token = customertypeService.getAllCustomer_type();
			}
			
		]]>
	</fx:Script>
	
	<s:SkinnableContainer width="452" height="613" x="272" y="204">
		
		<s:Label x="63" y="15" text="Account Name" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="11" width="40%" fontFamily="Verdana" id="accountName" contentBackgroundColor="#FFFFFF"/>
				
		<s:Label x="63" y="75" text="Customer Type" fontFamily="Verdana" fontWeight="bold"/>
		<s:DropDownList x="201" y="71" width="40%" id="customerType" 
						prompt="Select type of account" creationComplete="customerType_creationCompleteHandler(event)" labelField="customer_type">
			<s:AsyncListView list="{getAllCustomer_typeResult.lastResult}"/>
		</s:DropDownList>
		
		<s:Label x="63" y="105" text="Title" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="101" width="40%" fontFamily="Verdana" id="title" contentBackgroundColor="#FFFFFF"/>
		
		<s:Label x="63" y="135" text="First Name" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="131" width="40%" fontFamily="Verdana" id="firstName" contentBackgroundColor="#FFFFFF"/>
		
		<s:Label x="63" y="165" text="Last Name" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="161" width="40%" fontFamily="Verdana" id="lastName" contentBackgroundColor="#FFFFFF"/>
		
		<s:Label x="63" y="195" text="Address Line 1" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="191" width="40%" fontFamily="Verdana" id="address1"/>
		
		<s:Label x="63" y="225" text="Address Line 2" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="221" width="40%" fontFamily="Verdana" id="address2"/>
		
		<s:Label x="63" y="255" text="City" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="251" width="40%" fontFamily="Verdana" id="city"/>
		
		<s:Label x="63" y="285" text="State" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="281" width="40%" fontFamily="Verdana" id="state"/>
		
		<s:Label x="63" y="315" text="Zip Code" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="311" width="40%" fontFamily="Verdana" id="zipCode"/>
		
		<s:Label x="63" y="345" text="Account Email" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="341" width="40%" fontFamily="Verdana" id="accountEmail"/>		
		
		<s:Label x="63" y="375" text="Account Website" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="371" width="40%" fontFamily="Verdana" id="accountWebsite"/>
		
		<s:Label x="62" y="405" text="Account Phone#" fontFamily="Verdana" fontWeight="bold"/>
		<s:TextInput x="201" y="401" width="40%" fontFamily="Verdana" id="accountPhone"/>
		
		<s:Label x="63" y="45" text="Account Type" fontFamily="Verdana" fontWeight="bold"/>
		<s:DropDownList x="201" y="41" width="40%" id="accountType"
						dataProvider="{typeAccount}" prompt="Select type of account">
		</s:DropDownList>
		
		<s:Button x="204" y="432" label="Save" click="send_data()"/>
		<!--<s:Button x="291" y="432" label="Add Person"/>-->
		
		
	</s:SkinnableContainer>
	<mx:HRule x="0" y="121" width="100%"/>
	
	
	<!-- Define the menu; dataProvider is the default MenuBar property.
	Because this uses an XML data provider, specify the labelField and
	showRoot properties. -->
	<mx:MenuBar id="bar" labelField="@label" itemClick="menuBarItemClickHandler(event)" x="325" y="74" height="39" width="305"  cornerRadius="20" fontFamily="Verdana" fontSize="13">
		<fx:XMLList>
			<menuitem label="Home"/>
			<menuitem label="Sales">
				<menuitem label="Create Account"  />
				<menuitem label="Create Account Person" />
				<menuitem label="Create Account Location" />
				<menuitem label="Create Contract" />
				<menuitem label="Create Communication" />
				<!--<menuitem label="Delete Account" enabled="false"/>-->
			</menuitem>
			<menuitem label="Ticket">
				<menuitem label="Create Ticket" />
				<menuitem label="Ticket Status"/>
			</menuitem>
			<menuitem label="Finance"/>
		</fx:XMLList>
	</mx:MenuBar>
	<s:Label x="375" y="150" text="Create Account" fontSize="28"/>
	
	
</s:Application>