<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   xmlns:accountservice="services.accountservice.*" xmlns:accountpersonservice="services.accountpersonservice.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:HTTPService id="create_communication" url="createCommunication.php"
					   useProxy="false" method="POST" fault="create_communication_faultHandler(event)">
			<mx:request xmlns="">
				<Parent_Account> {parent_account.selectedItem.account_name} </Parent_Account>
				<Account_Person> {account_person.selectedItem.first_name+' '+account_person.selectedItem.last_name} </Account_Person>
				<Subject> {subject.text} </Subject>
				<Description> {description.text} </Description>
			</mx:request>
		</s:HTTPService>
		
		<s:HTTPService id="sendtoService" url="service.php" useProxy="false" method="GET" />
		<s:CallResponder id="getAllAccountResult"/>
		<accountservice:AccountService id="accountService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
		<s:CallResponder id="getAccount_personByParentAccountIDResult"/>
		<accountpersonservice:AccountpersonService id="accountpersonService" fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)" showBusyCursor="true"/>
	</fx:Declarations>
	<mx:ModuleLoader id="shownModule" url="" y="159" horizontalCenter="5" />
	<fx:Script>
		<![CDATA[
			import com.adobe.serializers.utility.TypeUtility;
			
			import flash.events.*;
			import flash.net.*;
			
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.*;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ArrayUtil;
			import mx.utils.ObjectProxy;
			
			import spark.events.IndexChangeEvent;		
			
			public function menuBarItemClickHandler(event:MenuEvent):void {
				switch(event.label){
					case 'Create Account':
						var urlReq:URLRequest = new URLRequest("createAccount.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Communication':
						var urlReq:URLRequest = new URLRequest("createCommunication.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Account Person':
						var urlReq:URLRequest = new URLRequest("createAccountPerson.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Account Location':
						var urlReq:URLRequest = new URLRequest("createAccountLocation.html");
						navigateToURL(urlReq, "_self");
						break;
					case 'Create Contract':
						var urlReq:URLRequest = new URLRequest("createContract.html");
						navigateToURL(urlReq, "_self");
						break;
				}
				
			}
			
			/*private function get_cust_info():void{
			accountInfo.send();
			//personInfo.send();
			}*/
			
			private function send_data():void {
				create_communication.send();
				Alert.show("Communication created!!!");
				//var urlReq:URLRequest = new URLRequest("customerCommunication.html");
				//navigateToURL(urlReq, "_self");
				//to_modify_account();
			}
			private function to_action():void{
		
			//var urlReq:URLRequest = new URLRequest("../test/action.html");
			//navigateToURL(urlReq, "_self");
				Alert.show("going!!!");
				shownModule.url="createAction.swf";
			
			}
			protected function parent_account_changeHandler(event:Event):void {
				getAccount_personByParentAccountIDResult.token = accountpersonService.getAccount_personByParentAccountID(parent_account.selectedItem.account_id);
				account_person.enabled = true;
			}
			
			
			protected function parent_account_creationCompleteHandler(event:FlexEvent):void
			{
				getAllAccountResult.token = accountService.getAllAccount();
			}
			

			protected function create_communication_faultHandler(event:FaultEvent):void
			{
				//Alert.show(event.toString());// TODO Auto-generated method stub
			}


			protected function btnCreateAction_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show("going!!!");
				this.form.visible=false;
				shownModule.url="createaction_module.swf";
			}

		]]>
	</fx:Script>
	
	<mx:Form id="form" y="164" borderVisible="true" dropShadowVisible="false" fontFamily="Verdana" horizontalCenter="-130">
		<mx:FormHeading label="Customer Communication" fontSize="19"/>
		<mx:FormItem id="lblParentAccount" label="Parent Account" fontFamily="Verdana" fontWeight="bold" verticalGap="12" indicatorGap="30" horizontalAlign="left" paddingTop="50">
			<s:DropDownList width="230" fontFamily="Verdana" fontSize="12" 
							id="parent_account" 
							change="parent_account_changeHandler(event)"
							prompt="Select a Parent Account"  
							creationComplete="parent_account_creationCompleteHandler(event)" labelField="account_name">
				<s:AsyncListView list="{getAllAccountResult.lastResult}"/>
			</s:DropDownList>
			<!--<s:TextInput id="parent_account" width="230" fontFamily="Verdana" fontSize="12"/>-->
		</mx:FormItem>
		<mx:FormItem id="lblAccountPerson" label="Account Person" fontFamily="Verdana" fontWeight="bold" verticalGap="12" indicatorGap="30">
			<s:DropDownList width="230" fontFamily="Verdana" fontSize="12" 
							id="account_person" enabled="false"
							prompt="Select a Account Person"
							labelField="first_name">
				<s:AsyncListView list="{getAccount_personByParentAccountIDResult.lastResult}"/>
			</s:DropDownList>
			<!--<s:TextInput id="account_person" width="230" fontFamily="Verdana" fontSize="12" paddingTop="7"/>-->
		</mx:FormItem>
		<mx:FormItem id="lblSubject" label="Subject" fontWeight="bold" fontFamily="Verdana" verticalGap="12" indicatorGap="30">
			<s:TextInput id="subject" width="230" fontFamily="Verdana" fontSize="12"/>
		</mx:FormItem>
		<mx:FormItem id="lblDescription" label="Description" fontFamily="Verdana" fontWeight="bold" verticalGap="12" indicatorGap="30">
			<s:TextArea id="description" height="120" width="230" fontFamily="Verdana" fontSize="12"/>
		</mx:FormItem>
		
		<mx:FormItem  direction="horizontal" paddingTop="80">
			<!--<s:Button label="Create Action" id="btnCreateAction" click="to_action()"/>-->
			<s:Button label="Create Action" id="btnCreateAction" click="btnCreateAction_clickHandler(event)"/>
			<mx:Spacer width="5" />
			<s:Button label="Save" id="btnCommunicationSubmit" click="send_data()"/>
			<mx:Spacer width="5" />
			<s:Button label="Cancel" id="btnCommunicationCancel" />
		</mx:FormItem>
	</mx:Form>	
	<mx:MenuBar id="bar" labelField="@label" itemClick="menuBarItemClickHandler(event)" x="325" y="74" height="39" width="305"  cornerRadius="20" fontFamily="Verdana" fontSize="13">
		<fx:XMLList>
			<menuitem label="Home"/>
			<menuitem label="Sales">
				<menuitem label="Create Account"  />
				<menuitem label="Create Account Person" />
				<menuitem label="Create Account Location" />
				<menuitem label="Create Contract" />
				<menuitem label="Create Communication" />
				<!--<menuitem label="Delete Account" enabled="false"/>-->
			</menuitem>
			<menuitem label="Ticket">
				<menuitem label="Create Ticket" />
				<menuitem label="Ticket Status"/>
			</menuitem>
			<menuitem label="Finance"/>
		</fx:XMLList>
	</mx:MenuBar>
	<mx:HRule x="0" y="121" width="100%"/>
	<mx:VRule x="185" y="-1" height="100%"/>		
</s:Application>
